// Generated by psc-bundle 0.7.0.0
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Bind -----------------------------------------------------------------------

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };

  //- Semiring -------------------------------------------------------------------

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  //- Ring -----------------------------------------------------------------------

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };

  //- Lattice --------------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  //- ComplementedLattice --------------------------------------------------------

  exports.boolNot = function (b) {
    return !b;
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
      this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
      this.sub = sub;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var top = function (dict) {
      return dict.top;
  };
  var sub = function (dict) {
      return dict.sub;
  };
  var $minus = function (__dict_Ring_0) {
      return sub(__dict_Ring_0);
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });                 
  var ringInt = new Ring(function () {
      return semiringInt;
  }, $foreign.intSub);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var otherwise = true;
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var negate = function (__dict_Ring_3) {
      return function (a) {
          return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
      };
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var $less$hash$greater = function (__dict_Functor_6) {
      return function (fa) {
          return function (f) {
              return $less$dollar$greater(__dict_Functor_6)(f)(fa);
          };
      };
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };                
  var eqInt = new Eq($foreign.refEq);
  var ordInt = new Ord(function () {
      return eqInt;
  }, unsafeCompare);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (_28) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };                                                   
  var $less$less$less = function (__dict_Semigroupoid_14) {
      return compose(__dict_Semigroupoid_14);
  };
  var $greater$greater$greater = function (__dict_Semigroupoid_15) {
      return flip(compose(__dict_Semigroupoid_15));
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var $greater = function (__dict_Ord_19) {
      return function (a1) {
          return function (a2) {
              var _589 = compare(__dict_Ord_19)(a1)(a2);
              if (_589 instanceof GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var bind = function (dict) {
      return dict.bind;
  };
  var liftM1 = function (__dict_Monad_23) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_23["__superclass_Prelude.Bind_1"]())(a)(function (_10) {
                  return $$return(__dict_Monad_23["__superclass_Prelude.Applicative_0"]())(f(_10));
              });
          };
      };
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_12) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_11) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_12(_11));
                  });
              });
          };
      };
  };
  var monadArray = new Monad(function () {
      return applicativeArray;
  }, function () {
      return bindArray;
  });
  var bindArray = new Bind(function () {
      return applyArray;
  }, $foreign.arrayBind);
  var applyArray = new Apply(function () {
      return functorArray;
  }, ap(monadArray));
  var applicativeArray = new Applicative(function () {
      return applyArray;
  }, function (x) {
      return [ x ];
  });
  var add = function (dict) {
      return dict.add;
  };
  var $plus = function (__dict_Semiring_31) {
      return add(__dict_Semiring_31);
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Ring"] = Ring;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports[">"] = $greater;
  exports["compare"] = compare;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["-"] = $minus;
  exports["negate"] = negate;
  exports["sub"] = sub;
  exports["+"] = $plus;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["liftM1"] = liftM1;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<#>"] = $less$hash$greater;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports[">>>"] = $greater$greater$greater;
  exports["<<<"] = $less$less$less;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["applyArray"] = applyArray;
  exports["applicativeArray"] = applicativeArray;
  exports["bindArray"] = bindArray;
  exports["monadArray"] = monadArray;
  exports["semiringInt"] = semiringInt;
  exports["ringInt"] = ringInt;
  exports["eqInt"] = eqInt;
  exports["ordInt"] = ordInt;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };                                         
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;;
 
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.ST

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        /* jshint boss: true */
        return ref.value = a;
      };
    };
  };
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  exports["writeSTRef"] = $foreign.writeSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["newSTRef"] = $foreign.newSTRef;;
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_328) {
      return _328;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_351) {
          return f(_351);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_352) {
      return function (_353) {
          return _352(_353);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_354) {
      return function (f) {
          return f(_354);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];     
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;;
 
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_192) {
              if (_192 instanceof Nothing) {
                  return b;
              };
              if (_192 instanceof Just) {
                  return f(_192.value0);
              };
              throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-maybe/src/Data/Maybe.purs line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _192.constructor.name ]);
          };
      };
  };                                                
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_193) {
          if (_193 instanceof Just) {
              return new Just(fn(_193.value0));
          };
          return Nothing.value;
      };
  });                                                                                                   
  var fromMaybe = function (a) {
      return maybe(a)(Prelude.id(Prelude.categoryFn));
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (_367) {
      return _367.value1;
  };                                                                                                    
  var fst = function (_366) {
      return _366.value0;
  };
  exports["Tuple"] = Tuple;
  exports["snd"] = snd;
  exports["fst"] = fst;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Either = PS["Data.Either"];     
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (_123) {
      return _123;
  };
  var monadStateT = function (__dict_Monad_3) {
      return new Prelude.Monad(function () {
          return applicativeStateT(__dict_Monad_3);
      }, function () {
          return bindStateT(__dict_Monad_3);
      });
  };
  var functorStateT = function (__dict_Monad_10) {
      return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_10)));
  };
  var bindStateT = function (__dict_Monad_13) {
      return new Prelude.Bind(function () {
          return applyStateT(__dict_Monad_13);
      }, function (_124) {
          return function (f) {
              return function (s) {
                  return Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(_124(s))(function (_23) {
                      return runStateT(f(_23.value0))(_23.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (__dict_Monad_14) {
      return new Prelude.Apply(function () {
          return functorStateT(__dict_Monad_14);
      }, Prelude.ap(monadStateT(__dict_Monad_14)));
  };
  var applicativeStateT = function (__dict_Monad_15) {
      return new Prelude.Applicative(function () {
          return applyStateT(__dict_Monad_15);
      }, function (a) {
          return StateT(function (s) {
              return Prelude["return"](__dict_Monad_15["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
          });
      });
  };
  exports["StateT"] = StateT;
  exports["runStateT"] = runStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;;
 
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Tuple = PS["Data.Tuple"];                   
  var runState = function (s) {
      return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
  };
  var execState = function (m) {
      return function (s) {
          return Data_Tuple.snd(runState(m)(s));
      };
  };
  exports["execState"] = execState;
  exports["runState"] = runState;;
 
})(PS["Control.Monad.State"] = PS["Control.Monad.State"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_RWS = PS["Control.Monad.RWS"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_RWS_Trans = PS["Control.Monad.RWS.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];     
  var MonadState = function (state) {
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var monadStateStateT = function (__dict_Monad_7) {
      return new MonadState(function (f) {
          return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](__dict_Monad_7["__superclass_Prelude.Applicative_0"]()))(f));
      });
  };
  var modify = function (__dict_Monad_16) {
      return function (__dict_MonadState_17) {
          return function (f) {
              return state(__dict_MonadState_17)(function (s) {
                  return new Data_Tuple.Tuple(Prelude.unit, f(s));
              });
          };
      };
  };
  exports["MonadState"] = MonadState;
  exports["modify"] = modify;
  exports["state"] = state;
  exports["monadStateStateT"] = monadStateStateT;;
 
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.ST

  exports.runSTArray = function (f) {
    return f;
  };

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["emptySTArray"] = $foreign.emptySTArray;
  exports["runSTArray"] = $foreign.runSTArray;;
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function (f) {
      return function (b) {
          return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
              var _19 = Data_Array_ST.emptySTArray();
              var _18 = Control_Monad_ST.newSTRef(b)();
              (function () {
                  while (!(function __do() {
                      var _17 = Control_Monad_ST.readSTRef(_18)();
                      return (function () {
                          var _650 = f(_17);
                          if (_650 instanceof Data_Maybe.Nothing) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                          };
                          if (_650 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Data_Array_ST.pushSTArray(_19)(_650.value0.value0)();
                                  Control_Monad_ST.writeSTRef(_18)(_650.value0.value1)();
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                              };
                          };
                          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-unfoldable/src/Data/Unfoldable.purs line 28, column 1 - line 40, column 16: " + [ _650.constructor.name ]);
                      })()();
                  })()) {

                  };
                  return {};
              })();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_19)();
          }));
      };
  });
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;;
 
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];     
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var $colon = Cons.create;
  var zipWith = function (f) {
      return function (_463) {
          return function (_464) {
              if (_463 instanceof Nil) {
                  return Nil.value;
              };
              if (_464 instanceof Nil) {
                  return Nil.value;
              };
              if (_463 instanceof Cons && _464 instanceof Cons) {
                  return new Cons(f(_463.value0)(_464.value0), zipWith(f)(_463.value1)(_464.value1));
              };
              throw new Error("Failed pattern match: " + [ f.constructor.name, _463.constructor.name, _464.constructor.name ]);
          };
      };
  };
  var zip = zipWith(Data_Tuple.Tuple.create);
  var updateAt = function (_449) {
      return function (x) {
          return function (_450) {
              if (_449 === 0 && _450 instanceof Cons) {
                  return new Data_Maybe.Just(new Cons(x, _450.value1));
              };
              if (_450 instanceof Cons) {
                  return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_450.value0))(updateAt(Prelude["-"](Prelude.ringInt)(_449)(1))(x)(_450.value1));
              };
              return Data_Maybe.Nothing.value;
          };
      };
  }; 
  var uncons = function (_442) {
      if (_442 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_442 instanceof Cons) {
          return new Data_Maybe.Just({
              head: _442.value0, 
              tail: _442.value1
          });
      };
      throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 265, column 1 - line 266, column 1: " + [ _442.constructor.name ]);
  };
  var tail = function (_440) {
      if (_440 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_440 instanceof Cons) {
          return new Data_Maybe.Just(_440.value1);
      };
      throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 249, column 1 - line 250, column 1: " + [ _440.constructor.name ]);
  };
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  };
  var semigroupList = new Prelude.Semigroup(function (_486) {
      return function (ys) {
          if (_486 instanceof Nil) {
              return ys;
          };
          if (_486 instanceof Cons) {
              return new Cons(_486.value0, Prelude["<>"](semigroupList)(_486.value1)(ys));
          };
          throw new Error("Failed pattern match: " + [ _486.constructor.name, ys.constructor.name ]);
      };
  });
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy__467) {
              var acc = __copy_acc;
              var _467 = __copy__467;
              tco: while (true) {
                  var acc_1 = acc;
                  if (_467 instanceof Nil) {
                      return acc_1;
                  };
                  if (_467 instanceof Cons) {
                      var __tco_acc = new Cons(_467.value0, acc);
                      var __tco__467 = _467.value1;
                      acc = __tco_acc;
                      _467 = __tco__467;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 363, column 1 - line 364, column 1: " + [ acc.constructor.name, _467.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();
  var range = function (start) {
      return function (end) {
          if (Prelude["=="](Prelude.eqInt)(start)(end)) {
              return singleton(start);
          };
          if (Prelude.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_tail_1) {
                              var s = __copy_s;
                              var e = __copy_e;
                              var step = __copy_step;
                              var tail_1 = __copy_tail_1;
                              tco: while (true) {
                                  if (Prelude["=="](Prelude.eqInt)(s)(e)) {
                                      return new Cons(s, tail_1);
                                  };
                                  if (Prelude.otherwise) {
                                      var __tco_s = Prelude["+"](Prelude.semiringInt)(s)(step);
                                      var __tco_e = e;
                                      var __tco_step = step;
                                      var __tco_tail_1 = new Cons(s, tail_1);
                                      s = __tco_s;
                                      e = __tco_e;
                                      step = __tco_step;
                                      tail_1 = __tco_tail_1;
                                      continue tco;
                                  };
                                  throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 137, column 1 - line 138, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, tail_1.constructor.name ]);
                              };
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var _740 = Prelude[">"](Prelude.ordInt)(start)(end);
                  if (_740) {
                      return 1;
                  };
                  if (!_740) {
                      return Prelude.negate(Prelude.ringInt)(1);
                  };
                  throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 137, column 1 - line 138, column 1: " + [ _740.constructor.name ]);
              })())(Nil.value);
          };
          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 137, column 1 - line 138, column 1: " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var length = function (_436) {
      if (_436 instanceof Nil) {
          return 0;
      };
      if (_436 instanceof Cons) {
          return Prelude["+"](Prelude.semiringInt)(1)(length(_436.value1));
      };
      throw new Error("Failed pattern match: " + [ _436.constructor.name ]);
  };
  var index = function (__copy__443) {
      return function (__copy__444) {
          var _443 = __copy__443;
          var _444 = __copy__444;
          tco: while (true) {
              if (_443 instanceof Nil) {
                  return Data_Maybe.Nothing.value;
              };
              if (_443 instanceof Cons && _444 === 0) {
                  return new Data_Maybe.Just(_443.value0);
              };
              if (_443 instanceof Cons) {
                  var __tco__443 = _443.value1;
                  var __tco__444 = Prelude["-"](Prelude.ringInt)(_444)(1);
                  _443 = __tco__443;
                  _444 = __tco__444;
                  continue tco;
              };
              throw new Error("Failed pattern match: " + [ _443.constructor.name, _444.constructor.name ]);
          };
      };
  };
  var $bang$bang = index;
  var head = function (_438) {
      if (_438 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_438 instanceof Cons) {
          return new Data_Maybe.Just(_438.value0);
      };
      throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 234, column 1 - line 235, column 1: " + [ _438.constructor.name ]);
  };
  var functorList = new Prelude.Functor(function (f) {
      return function (_487) {
          if (_487 instanceof Nil) {
              return Nil.value;
          };
          if (_487 instanceof Cons) {
              return new Cons(f(_487.value0), Prelude["<$>"](functorList)(f)(_487.value1));
          };
          throw new Error("Failed pattern match: " + [ f.constructor.name, _487.constructor.name ]);
      };
  });
  var fromList = function (__dict_Unfoldable_15) {
      return Data_Unfoldable.unfoldr(__dict_Unfoldable_15)(function (xs) {
          return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var filter = function (p) {
      var go = function (__copy_acc) {
          return function (__copy__468) {
              var acc = __copy_acc;
              var _468 = __copy__468;
              tco: while (true) {
                  var acc_1 = acc;
                  if (_468 instanceof Nil) {
                      return reverse(acc_1);
                  };
                  if (_468 instanceof Cons) {
                      if (p(_468.value0)) {
                          var __tco_acc = new Cons(_468.value0, acc);
                          var __tco__468 = _468.value1;
                          acc = __tco_acc;
                          _468 = __tco__468;
                          continue tco;
                      };
                      if (Prelude.otherwise) {
                          var __tco_acc = acc;
                          var __tco__468 = _468.value1;
                          acc = __tco_acc;
                          _468 = __tco__468;
                          continue tco;
                      };
                  };
                  throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-lists/src/Data/List.purs line 386, column 1 - line 387, column 1: " + [ acc.constructor.name, _468.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  };
  var deleteAt = function (_447) {
      return function (_448) {
          if (_447 === 0 && _448 instanceof Cons) {
              return new Data_Maybe.Just(_448.value1);
          };
          if (_448 instanceof Cons) {
              return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_448.value0))(deleteAt(Prelude["-"](Prelude.ringInt)(_447)(1))(_448.value1));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Prelude.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["zip"] = zip;
  exports["zipWith"] = zipWith;
  exports["filter"] = filter;
  exports["reverse"] = reverse;
  exports["updateAt"] = updateAt;
  exports["deleteAt"] = deleteAt;
  exports["index"] = index;
  exports["!!"] = $bang$bang;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["length"] = length;
  exports["range"] = range;
  exports["singleton"] = singleton;
  exports["fromList"] = fromList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;;
 
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return Prelude[">>>"](Prelude.semigroupoidFn)(a2b)(Prelude[">>>"](Prelude.semigroupoidFn)(b2c)(c2d));
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (__dict_Profunctor_1) {
      return function (b2c) {
          return dimap(__dict_Profunctor_1)(Prelude.id(Prelude.categoryFn))(b2c);
      };
  };
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;;
 
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Main

  exports.getValue = function(e) {
      return e.target.value;
  };

  exports.getChecked = function(e) {
      return e.target.checked;
  };

  exports.getKeyCode = function(e) {
      return e.keyCode;
  };
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Thermite.Internal

  exports.getStateImpl = function(ctx) {
    return function() {
      return ctx.state.value;
    };
  };

  exports.setStateImpl = function(ctx) {
    return function(state) {
      return function() {
        ctx.setState({ value: state });
      };
    };
  }

  exports.textImpl = function(s) {
    return s;
  }

  exports.createElementImpl = function(element) {
    return function(props) {
      return function(children) {
        if ("dangerouslySetInnerHTML" in props) {
          return React.createElement(element, props);
        } else {
          return React.createElement(element, props, children);
        }
      };
    };
  }

  exports.unsafeAttribute = function(k) {
    return function(value) {
      var o = {};
      o[k] = value;
      return o;
    };
  };

  exports.event = function(name) {
    return function(context) {
      return function(f) {
        var o = {}; 
        o[name] = function(e) {
          context.performAction(f(e));
        };
        return o;
      };
    };
  };

  exports.documentBody = function() {
    return document.body;
  };

  exports.renderToImpl = function(element) {
    return function(component) {
      return function(props) {
        return function() {
          React.render(React.createElement(component, props), element);
        };
      };
    }
  };
})(PS["Thermite.Internal"] = PS["Thermite.Internal"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Thermite.Types

  exports.emptyAttr = {};

  exports.appendAttr = function(attr1) {
      return function(attr2) {
          var o = {};
          for (var k in attr1) {
              if (attr1.hasOwnProperty(k)) {
                  o[k] = attr1[k];
              }
          }
          for (var k in attr2) {
              if (attr2.hasOwnProperty(k)) {
                  o[k] = attr2[k];
              }
          }
          return o;
      };
  };
 
})(PS["Thermite.Types"] = PS["Thermite.Types"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Thermite.Types"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];     
  var semigroupAttr = new Prelude.Semigroup($foreign.appendAttr);
  var monoidAttr = new Data_Monoid.Monoid(function () {
      return semigroupAttr;
  }, $foreign.emptyAttr);
  exports["semigroupAttr"] = semigroupAttr;
  exports["monoidAttr"] = monoidAttr;;
 
})(PS["Thermite.Types"] = PS["Thermite.Types"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Thermite.Internal"];
  var Prelude = PS["Prelude"];
  var DOM = PS["DOM"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Thermite_Types = PS["Thermite.Types"];
  exports["renderToImpl"] = $foreign.renderToImpl;
  exports["documentBody"] = $foreign.documentBody;
  exports["event"] = $foreign.event;
  exports["unsafeAttribute"] = $foreign.unsafeAttribute;
  exports["createElementImpl"] = $foreign.createElementImpl;
  exports["textImpl"] = $foreign.textImpl;
  exports["setStateImpl"] = $foreign.setStateImpl;
  exports["getStateImpl"] = $foreign.getStateImpl;;
 
})(PS["Thermite.Internal"] = PS["Thermite.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Thermite_Internal = PS["Thermite.Internal"];
  var Data_Monoid = PS["Data.Monoid"];
  var Thermite_Types = PS["Thermite.Types"];                             
  var tr = Thermite_Internal.createElementImpl("tr");
  var tr$prime = tr(Data_Monoid.mempty(Thermite_Types.monoidAttr));    
  var thead = Thermite_Internal.createElementImpl("thead");
  var thead$prime = thead(Data_Monoid.mempty(Thermite_Types.monoidAttr));
  var th = Thermite_Internal.createElementImpl("th");                          
  var td = Thermite_Internal.createElementImpl("td");
  var td$prime = td(Data_Monoid.mempty(Thermite_Types.monoidAttr));
  var tbody = Thermite_Internal.createElementImpl("tbody");
  var tbody$prime = tbody(Data_Monoid.mempty(Thermite_Types.monoidAttr));
  var table = Thermite_Internal.createElementImpl("table");          
  var input = Thermite_Internal.createElementImpl("input");        
  var h1 = Thermite_Internal.createElementImpl("h1");
  var h1$prime = h1(Data_Monoid.mempty(Thermite_Types.monoidAttr));
  var div = Thermite_Internal.createElementImpl("div");                    
  var button = Thermite_Internal.createElementImpl("button");          
  var a = Thermite_Internal.createElementImpl("a");
  exports["tr'"] = tr$prime;
  exports["tr"] = tr;
  exports["thead'"] = thead$prime;
  exports["thead"] = thead;
  exports["th"] = th;
  exports["td'"] = td$prime;
  exports["td"] = td;
  exports["tbody'"] = tbody$prime;
  exports["tbody"] = tbody;
  exports["table"] = table;
  exports["input"] = input;
  exports["h1'"] = h1$prime;
  exports["h1"] = h1;
  exports["div"] = div;
  exports["button"] = button;
  exports["a"] = a;;
 
})(PS["Thermite.Html.Elements"] = PS["Thermite.Html.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Thermite_Internal = PS["Thermite.Internal"];
  var Prelude = PS["Prelude"];
  var Thermite_Types = PS["Thermite.Types"];     
  var text = Thermite_Internal.textImpl;
  exports["text"] = text;;
 
})(PS["Thermite.Html"] = PS["Thermite.Html"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Thermite_Internal = PS["Thermite.Internal"];
  var Prelude = PS["Prelude"];
  var Thermite_Types = PS["Thermite.Types"];             
  var value = Thermite_Internal.unsafeAttribute("value");  
  var title = Thermite_Internal.unsafeAttribute("title");  
  var placeholder = Thermite_Internal.unsafeAttribute("placeholder");
  var className = Thermite_Internal.unsafeAttribute("className");
  var checked = Thermite_Internal.unsafeAttribute("checked");
  var _type = Thermite_Internal.unsafeAttribute("type");
  exports["value"] = value;
  exports["_type"] = _type;
  exports["title"] = title;
  exports["placeholder"] = placeholder;
  exports["className"] = className;
  exports["checked"] = checked;;
 
})(PS["Thermite.Html.Attributes"] = PS["Thermite.Html.Attributes"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Thermite_Internal = PS["Thermite.Internal"];
  var Prelude = PS["Prelude"];
  var Thermite_Types = PS["Thermite.Types"];               
  var onKeyUp = Thermite_Internal.event("onKeyUp");
  var onClick = Thermite_Internal.event("onClick");
  var onChange = Thermite_Internal.event("onChange");
  exports["onClick"] = onClick;
  exports["onChange"] = onChange;
  exports["onKeyUp"] = onKeyUp;;
 
})(PS["Thermite.Events"] = PS["Thermite.Events"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Control_Monad_State = PS["Control.Monad.State"];
  var Prelude = PS["Prelude"];     
  var $hash$tilde = function (s) {
      return function (sa) {
          return Control_Monad_State.execState(sa)(s);
      };
  };
  exports["#~"] = $hash$tilde;;
 
})(PS["Optic.Monad"] = PS["Optic.Monad"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Functor_Contravariant = PS["Data.Functor.Contravariant"];
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Optic_Internal_Setter = PS["Optic.Internal.Setter"];
  var Data_Maybe = PS["Data.Maybe"];
  var Optic_Types = PS["Optic.Types"];
  var set = function (stab) {
      return function (b) {
          return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.Identity)(Prelude["const"](b))));
      };
  };
  var $dot$tilde = set;
  var over = function (__dict_Profunctor_3) {
      return function (pstab) {
          return function (pab) {
              return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(pstab(Data_Profunctor.rmap(__dict_Profunctor_3)(Data_Identity.Identity)(pab)));
          };
      };
  };
  var $plus$plus$tilde = function (__dict_Semigroup_7) {
      return function (staa) {
          return function (a) {
              return over(Data_Profunctor.profunctorFn)(staa)(Prelude.flip(Prelude["++"](__dict_Semigroup_7))(a));
          };
      };
  };
  exports["set"] = set;
  exports["over"] = over;
  exports["++~"] = $plus$plus$tilde;
  exports[".~"] = $dot$tilde;;
 
})(PS["Optic.Setter"] = PS["Optic.Setter"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Optic_Getter = PS["Optic.Getter"];
  var Optic_Lens = PS["Optic.Lens"];
  var Optic_Prism = PS["Optic.Prism"];
  var Optic_Setter = PS["Optic.Setter"];
  var Optic_Types = PS["Optic.Types"];     
  var $dot$dot = function (__dict_Semigroupoid_0) {
      return Prelude["<<<"](__dict_Semigroupoid_0);
  };
  exports[".."] = $dot$dot;;
 
})(PS["Optic.Core"] = PS["Optic.Core"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Optic_Setter = PS["Optic.Setter"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Optic_Types = PS["Optic.Types"];
  var $dot$eq = function (__dict_Monad_11) {
      return function (__dict_MonadState_12) {
          return function (ssab) {
              return function (b) {
                  return Control_Monad_State_Class.modify(__dict_Monad_11)(__dict_MonadState_12)(Optic_Setter[".~"](ssab)(b));
              };
          };
      };
  };
  var $plus$plus$eq = function (__dict_Monad_19) {
      return function (__dict_MonadState_20) {
          return function (__dict_Semigroup_21) {
              return function (ssab) {
                  return function (b) {
                      return Control_Monad_State_Class.modify(__dict_Monad_19)(__dict_MonadState_20)(Optic_Setter["++~"](__dict_Semigroup_21)(ssab)(b));
                  };
              };
          };
      };
  };
  exports["++="] = $plus$plus$eq;
  exports[".="] = $dot$eq;;
 
})(PS["Optic.Monad.Setter"] = PS["Optic.Monad.Setter"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Set = PS["Data.Set"];
  var Data_StrMap = PS["Data.StrMap"];     
  var IndexKey = {};
  var IndexValue = {};           
  var indexValueList = IndexValue;
  var indexKeyList = IndexKey;
  exports["IndexValue"] = IndexValue;
  exports["IndexKey"] = IndexKey;
  exports["indexKeyList"] = indexKeyList;
  exports["indexValueList"] = indexValueList;;
 
})(PS["Optic.Index.Class"] = PS["Optic.Index.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Set = PS["Data.Set"];
  var Data_Map = PS["Data.Map"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Identity = PS["Data.Identity"];
  var Optic_Index_Class = PS["Optic.Index.Class"];
  var Optic_Index_Types = PS["Optic.Index.Types"];     
  var Index = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
      this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
      this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
      this.ix = ix;
  };
  var ix = function (dict) {
      return dict.ix;
  };
  var indexList = new Index(function () {
      return Optic_Index_Class.indexKeyList;
  }, function () {
      return Optic_Index_Class.indexValueList;
  }, function (n) {
      return function (__dict_Applicative_6) {
          return function (a2fa) {
              return function (as) {
                  return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_6)(as))(function (a) {
                      return Prelude["<$>"]((__dict_Applicative_6["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a$prime) {
                          return Data_Maybe.fromMaybe(as)(Data_List.updateAt(n)(a$prime)(as));
                      })(a2fa(a));
                  })(Data_List["!!"](as)(n));
              };
          };
      };
  });
  exports["Index"] = Index;
  exports["ix"] = ix;
  exports["indexList"] = indexList;;
 
})(PS["Optic.Index"] = PS["Optic.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Thermite_Internal = PS["Thermite.Internal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Thermite_Types = PS["Thermite.Types"];     
  var GetState = (function () {
      function GetState(value0) {
          this.value0 = value0;
      };
      GetState.create = function (value0) {
          return new GetState(value0);
      };
      return GetState;
  })();
  var SetState = (function () {
      function SetState(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetState.create = function (value0) {
          return function (value1) {
              return new SetState(value0, value1);
          };
      };
      return SetState;
  })();
  var Wait = (function () {
      function Wait(value0) {
          this.value0 = value0;
      };
      Wait.create = function (value0) {
          return new Wait(value0);
      };
      return Wait;
  })();
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Impure = (function () {
      function Impure(value0) {
          this.value0 = value0;
      };
      Impure.create = function (value0) {
          return new Impure(value0);
      };
      return Impure;
  })();
  var setState = function (s) {
      return Impure.create(new SetState(s, new Pure(Prelude.unit)));
  };
  var runAction = function (ctx) {
      var go = function (_558) {
          if (_558 instanceof Pure) {
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          };
          if (_558 instanceof Impure && _558.value0 instanceof GetState) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                  var _24 = Thermite_Internal.getStateImpl(ctx)();
                  return go(_558.value0.value0(_24))();
              });
          };
          if (_558 instanceof Impure && _558.value0 instanceof SetState) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                  Thermite_Internal.setStateImpl(ctx)(_558.value0.value0)();
                  return go(_558.value0.value1)();
              });
          };
          if (_558 instanceof Impure && _558.value0 instanceof Wait) {
              return _558.value0.value0(go);
          };
          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-thermite/src/Thermite/Action.purs line 40, column 1 - line 41, column 1: " + [ _558.constructor.name ]);
      };
      return go;
  };
  var getState = Impure.create(new GetState(Pure.create));
  var functorActionF = new Prelude.Functor(function (f) {
      return function (_557) {
          if (_557 instanceof GetState) {
              return new GetState(Prelude["<<<"](Prelude.semigroupoidFn)(f)(_557.value0));
          };
          if (_557 instanceof SetState) {
              return new SetState(_557.value0, f(_557.value1));
          };
          if (_557 instanceof Wait) {
              return new Wait(function (k) {
                  return _557.value0(Prelude["<<<"](Prelude.semigroupoidFn)(k)(f));
              });
          };
          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/bower_components/purescript-thermite/src/Thermite/Action.purs line 27, column 1 - line 37, column 1: " + [ f.constructor.name, _557.constructor.name ]);
      };
  });
  var functorAction = new Prelude.Functor(function (f) {
      return function (_559) {
          if (_559 instanceof Pure) {
              return new Pure(f(_559.value0));
          };
          if (_559 instanceof Impure) {
              return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(f))(_559.value0));
          };
          throw new Error("Failed pattern match: " + [ f.constructor.name, _559.constructor.name ]);
      };
  });
  var monadAction = new Prelude.Monad(function () {
      return applicativeAction;
  }, function () {
      return bindAction;
  });
  var bindAction = new Prelude.Bind(function () {
      return applyAction;
  }, function (_560) {
      return function (f) {
          if (_560 instanceof Pure) {
              return f(_560.value0);
          };
          if (_560 instanceof Impure) {
              return Impure.create(Prelude["<#>"](functorActionF)(_560.value0)(function (a) {
                  return Prelude[">>="](bindAction)(a)(f);
              }));
          };
          throw new Error("Failed pattern match: " + [ _560.constructor.name, f.constructor.name ]);
      };
  });
  var applyAction = new Prelude.Apply(function () {
      return functorAction;
  }, Prelude.ap(monadAction));
  var applicativeAction = new Prelude.Applicative(function () {
      return applyAction;
  }, Pure.create);
  var modifyState = function (f) {
      return Prelude.bind(bindAction)(getState)(function (_25) {
          return setState(f(_25));
      });
  };
  exports["modifyState"] = modifyState;
  exports["setState"] = setState;
  exports["getState"] = getState;
  exports["runAction"] = runAction;
  exports["functorAction"] = functorAction;
  exports["applyAction"] = applyAction;
  exports["applicativeAction"] = applicativeAction;
  exports["bindAction"] = bindAction;
  exports["monadAction"] = monadAction;;
 
})(PS["Thermite.Action"] = PS["Thermite.Action"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Thermite

  exports.createClassImpl = function(runAction) {
      return function(maybe) {
          return function(spec) {
              return React.createClass({
                  getInitialState: function() {
                      return {
                          value: spec.initialState
                      };
                  },
                  performAction: function(action) {
                      runAction(this)(spec.performAction(this.props)(action))();
                  },
                  render: function() {
                      var children = Array.isArray(this.props.children) ? this.props.children : [this.props.children];
                      return spec.render(this)(this.state.value)(this.props)(children);
                  },
                  componentWillMount: function() {
                      var self = this;
                      maybe(function() {})(function(action) {
                          return function() {
                              self.performAction(action);
                          };
                      })(spec.componentWillMount)();
                  },
                  displayName: maybe(undefined)(function(a) {
                      return a;
                  })(spec.displayName)
              })
          };
      };
  };
 
})(PS["Thermite"] = PS["Thermite"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Thermite"];
  var Thermite_Action = PS["Thermite.Action"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var Thermite_Internal = PS["Thermite.Internal"];
  var DOM = PS["DOM"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Thermite_Html = PS["Thermite.Html"];
  var Thermite_Types = PS["Thermite.Types"];
  var simpleSpec = function (initialState) {
      return function (performAction) {
          return function (render_1) {
              return {
                  initialState: initialState, 
                  performAction: performAction, 
                  render: render_1, 
                  componentWillMount: Data_Maybe.Nothing.value, 
                  displayName: Data_Maybe.Nothing.value
              };
          };
      };
  };
  var renderTo = Thermite_Internal.renderToImpl;
  var render = function (cc) {
      return function (props) {
          return function __do() {
              var _27 = Thermite_Internal.documentBody();
              return renderTo(_27)(cc)(props)();
          };
      };
  };
  var displayName = function (name) {
      return function (_562) {
          var _663 = {};
          for (var _664 in _562) {
              if (_562.hasOwnProperty(_664)) {
                  _663[_664] = _562[_664];
              };
          };
          _663.displayName = new Data_Maybe.Just(name);
          return _663;
      };
  };
  var createClass = $foreign.createClassImpl(Thermite_Action.runAction)(Data_Maybe.maybe);
  var componentWillMount = function (action) {
      return function (_561) {
          var _667 = {};
          for (var _668 in _561) {
              if (_561.hasOwnProperty(_668)) {
                  _667[_668] = _561[_668];
              };
          };
          _667.componentWillMount = new Data_Maybe.Just(action);
          return _667;
      };
  };
  exports["renderTo"] = renderTo;
  exports["render"] = render;
  exports["displayName"] = displayName;
  exports["createClass"] = createClass;
  exports["componentWillMount"] = componentWillMount;
  exports["simpleSpec"] = simpleSpec;;
 
})(PS["Thermite"] = PS["Thermite"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Thermite_Html_Elements = PS["Thermite.Html.Elements"];
  var Thermite_Html = PS["Thermite.Html"];
  var Thermite_Html_Attributes = PS["Thermite.Html.Attributes"];
  var Data_List = PS["Data.List"];
  var Data_Tuple = PS["Data.Tuple"];
  var Thermite_Events = PS["Thermite.Events"];
  var Optic_Monad = PS["Optic.Monad"];
  var Optic_Core = PS["Optic.Core"];
  var Optic_Monad_Setter = PS["Optic.Monad.Setter"];
  var Optic_Setter = PS["Optic.Setter"];
  var Data_Maybe = PS["Data.Maybe"];
  var Optic_Index = PS["Optic.Index"];
  var Thermite_Action = PS["Thermite.Action"];
  var Thermite = PS["Thermite"];
  var Thermite_Types = PS["Thermite.Types"];
  var Optic_Types = PS["Optic.Types"];
  var Optic_Prism = PS["Optic.Prism"];
  var Optic_Lens = PS["Optic.Lens"];
  var Optic_Getter = PS["Optic.Getter"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Data_Profunctor = PS["Data.Profunctor"];     
  var Item = (function () {
      function Item(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Item.create = function (value0) {
          return function (value1) {
              return new Item(value0, value1);
          };
      };
      return Item;
  })();
  var All = (function () {
      function All() {

      };
      All.value = new All();
      return All;
  })();
  var Active = (function () {
      function Active() {

      };
      Active.value = new Active();
      return Active;
  })();
  var Completed = (function () {
      function Completed() {

      };
      Completed.value = new Completed();
      return Completed;
  })();
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var NewItem = (function () {
      function NewItem(value0) {
          this.value0 = value0;
      };
      NewItem.create = function (value0) {
          return new NewItem(value0);
      };
      return NewItem;
  })();
  var RemoveItem = (function () {
      function RemoveItem(value0) {
          this.value0 = value0;
      };
      RemoveItem.create = function (value0) {
          return new RemoveItem(value0);
      };
      return RemoveItem;
  })();
  var SetEditText = (function () {
      function SetEditText(value0) {
          this.value0 = value0;
      };
      SetEditText.create = function (value0) {
          return new SetEditText(value0);
      };
      return SetEditText;
  })();
  var SetCompleted = (function () {
      function SetCompleted(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetCompleted.create = function (value0) {
          return function (value1) {
              return new SetCompleted(value0, value1);
          };
      };
      return SetCompleted;
  })();
  var SetFilter = (function () {
      function SetFilter(value0) {
          this.value0 = value0;
      };
      SetFilter.create = function (value0) {
          return new SetFilter(value0);
      };
      return SetFilter;
  })();
  var DoNothing = (function () {
      function DoNothing() {

      };
      DoNothing.value = new DoNothing();
      return DoNothing;
  })();
  var showFilter = function (_2) {
      if (_2 instanceof All) {
          return "All";
      };
      if (_2 instanceof Active) {
          return "Active";
      };
      if (_2 instanceof Completed) {
          return "Completed";
      };
      throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/src/Main.purs line 54, column 1 - line 55, column 1: " + [ _2.constructor.name ]);
  };
  var items = function (__dict_Functor_0) {
      return function (f) {
          return function (st) {
              return Prelude["<#>"](__dict_Functor_0)(f(st.items))(function (i) {
                  var _16 = {};
                  for (var _17 in st) {
                      if (st.hasOwnProperty(_17)) {
                          _16[_17] = st[_17];
                      };
                  };
                  _16.items = i;
                  return _16;
              });
          };
      };
  };
  var itemBoolean = function (__dict_Functor_1) {
      return function (f) {
          return function (_4) {
              return Prelude["<$>"](__dict_Functor_1)(Item.create(_4.value0))(f(_4.value1));
          };
      };
  };
  var initialState = new State({
      items: Control_Plus.empty(Data_List.plusList), 
      editText: "", 
      filter: All.value
  });
  var handleKeyPress = function (e) {
      var _22 = $foreign.getKeyCode(e);
      if (_22 === 13) {
          return NewItem.create($foreign.getValue(e));
      };
      if (_22 === 27) {
          return new SetEditText("");
      };
      return DoNothing.value;
  };
  var handleCheckEvent = function (index) {
      return function (e) {
          return new SetCompleted(index, $foreign.getChecked(e));
      };
  };
  var handleChangeEvent = function (e) {
      return new SetEditText($foreign.getValue(e));
  };
  var filter_ = function (__dict_Functor_2) {
      return function (f) {
          return function (st) {
              return Prelude["<#>"](__dict_Functor_2)(f(st.filter))(function (i) {
                  var _23 = {};
                  for (var _24 in st) {
                      if (st.hasOwnProperty(_24)) {
                          _23[_24] = st[_24];
                      };
                  };
                  _23.filter = i;
                  return _23;
              });
          };
      };
  };
  var eqFilter = new Prelude.Eq(function (_11) {
      return function (_12) {
          if (_11 instanceof All && _12 instanceof All) {
              return true;
          };
          if (_11 instanceof Active && _12 instanceof Active) {
              return true;
          };
          if (_11 instanceof Completed && _12 instanceof Completed) {
              return true;
          };
          return false;
      };
  });
  var editText = function (__dict_Functor_3) {
      return function (f) {
          return function (st) {
              return Prelude["<#>"](__dict_Functor_3)(f(st.editText))(function (i) {
                  var _27 = {};
                  for (var _28 in st) {
                      if (st.hasOwnProperty(_28)) {
                          _27[_28] = st[_28];
                      };
                  };
                  _27.editText = i;
                  return _27;
              });
          };
      };
  };
  var applyFilter = function (_5) {
      return function (_6) {
          if (_5 instanceof All) {
              return true;
          };
          if (_5 instanceof Active) {
              return Prelude.not(Prelude.booleanAlgebraBoolean)(_6.value1);
          };
          if (_5 instanceof Completed) {
              return _6.value1;
          };
          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/src/Main.purs line 101, column 1 - line 102, column 1: " + [ _5.constructor.name, _6.constructor.name ]);
      };
  };
  var render = function (ctx) {
      return function (_7) {
          return function (_8) {
              return function (_9) {
                  var title = Thermite_Html_Elements["h1'"]([ Thermite_Html.text("todos") ]);
                  var newItem = Thermite_Html_Elements["tr'"]([ Thermite_Html_Elements["td'"]([  ]), Thermite_Html_Elements["td'"]([ Thermite_Html_Elements.input(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("form-control"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.placeholder("Create a new task"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.value(_7.value0.editText))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Events.onKeyUp(ctx)(handleKeyPress))(Thermite_Events.onChange(ctx)(handleChangeEvent))))))([  ]) ]), Thermite_Html_Elements["td'"]([  ]) ]);
                  var item = function (_13) {
                      return Prelude["<<<"](Prelude.semigroupoidFn)(Thermite_Html_Elements["tr'"])(Prelude.map(Prelude.functorArray)(Prelude["<<<"](Prelude.semigroupoidFn)(Thermite_Html_Elements["td'"])(Prelude.pure(Prelude.applicativeArray))))([ Thermite_Html_Elements.input(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes._type("checkbox"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("checkbox"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.checked((function () {
                          if (_13.value0.value1) {
                              return "checked";
                          };
                          if (!_13.value0.value1) {
                              return "";
                          };
                          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/src/Main.purs line 106, column 1 - line 107, column 1: " + [ _13.value0.value1.constructor.name ]);
                      })()))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.title("Mark as completed"))(Thermite_Events.onChange(ctx)(handleCheckEvent(_13.value1)))))))([  ]), Thermite_Html.text(_13.value0.value0), Thermite_Html_Elements.a(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("btn btn-danger pull-right"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.title("Remove item"))(Thermite_Events.onClick(ctx)(function (_0) {
                          return new RemoveItem(_13.value1);
                      }))))([ Thermite_Html.text("\u2716") ]) ]);
                  };
                  var items_1 = Thermite_Html_Elements.table(Thermite_Html_Attributes.className("table table-striped"))([ Thermite_Html_Elements["thead'"]([ Thermite_Html_Elements.th(Thermite_Html_Attributes.className("col-md-1"))([  ]), Thermite_Html_Elements.th(Thermite_Html_Attributes.className("col-md-10"))([ Thermite_Html.text("Description") ]), Thermite_Html_Elements.th(Thermite_Html_Attributes.className("col-md-1"))([  ]) ]), Thermite_Html_Elements["tbody'"](Data_List.fromList(Data_Unfoldable.unfoldableArray)(Data_List[":"](newItem)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(Data_List.functorList)(item))(Data_List.filter(Prelude["<<<"](Prelude.semigroupoidFn)(applyFilter(_7.value0.filter))(Data_Tuple.fst)))(Data_List.zip(_7.value0.items)(Data_List.range(0)(Data_List.length(_7.value0.items))))))) ]);
                  var filter__1 = function (f) {
                      return Thermite_Html_Elements.button(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className((function () {
                          var _46 = Prelude["=="](eqFilter)(f)(_7.value0.filter);
                          if (_46) {
                              return "btn toolbar active";
                          };
                          if (!_46) {
                              return "btn toolbar";
                          };
                          throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/src/Main.purs line 106, column 1 - line 107, column 1: " + [ _46.constructor.name ]);
                      })()))(Thermite_Events.onClick(ctx)(function (_1) {
                          return new SetFilter(f);
                      })))([ Thermite_Html.text(showFilter(f)) ]);
                  };
                  var filters = Thermite_Html_Elements.div(Thermite_Html_Attributes.className("btn-group"))(Prelude["<$>"](Prelude.functorArray)(filter__1)([ All.value, Active.value, Completed.value ]));
                  return Thermite_Html_Elements.div(Thermite_Html_Attributes.className("container"))([ title, filters, items_1 ]);
              };
          };
      };
  };
  var _State = function (__dict_Functor_4) {
      return function (f) {
          return function (_3) {
              return Prelude["<$>"](__dict_Functor_4)(State.create)(f(_3.value0));
          };
      };
  };
  var performAction = function (_10) {
      return function (action) {
          var updateState = function (_14) {
              if (_14 instanceof NewItem) {
                  return function (st) {
                      return Optic_Monad["#~"](st)(Prelude.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Optic_Monad_Setter["++="](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(Data_List.semigroupList)(Optic_Core[".."](Prelude.semigroupoidFn)(_State(Data_Identity.functorIdentity))(items(Data_Identity.functorIdentity)))(Data_List.singleton(new Item(_14.value0, false))))(function () {
                          return Optic_Monad_Setter[".="](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(Optic_Core[".."](Prelude.semigroupoidFn)(_State(Data_Identity.functorIdentity))(editText(Data_Identity.functorIdentity)))("");
                      }));
                  };
              };
              if (_14 instanceof RemoveItem) {
                  return Optic_Setter.over(Data_Profunctor.profunctorFn)(Optic_Core[".."](Prelude.semigroupoidFn)(_State(Data_Identity.functorIdentity))(items(Data_Identity.functorIdentity)))(function (xs) {
                      return Data_Maybe.fromMaybe(xs)(Data_List.deleteAt(_14.value0)(xs));
                  });
              };
              if (_14 instanceof SetEditText) {
                  return Optic_Setter[".~"](Optic_Core[".."](Prelude.semigroupoidFn)(_State(Data_Identity.functorIdentity))(editText(Data_Identity.functorIdentity)))(_14.value0);
              };
              if (_14 instanceof SetCompleted) {
                  return Optic_Setter[".~"](Optic_Core[".."](Prelude.semigroupoidFn)(_State(Data_Identity.functorIdentity))(Optic_Core[".."](Prelude.semigroupoidFn)(items(Data_Identity.functorIdentity))(Optic_Core[".."](Prelude.semigroupoidFn)(Optic_Index.ix(Optic_Index.indexList)(_14.value0)(Data_Identity.applicativeIdentity))(itemBoolean(Data_Identity.functorIdentity)))))(_14.value1);
              };
              if (_14 instanceof SetFilter) {
                  return Optic_Setter[".~"](Optic_Core[".."](Prelude.semigroupoidFn)(_State(Data_Identity.functorIdentity))(filter_(Data_Identity.functorIdentity)))(_14.value0);
              };
              if (_14 instanceof DoNothing) {
                  return Prelude.id(Prelude.categoryFn);
              };
              throw new Error("Failed pattern match at /Users/paf31/Documents/Code/purescript/purescript-thermite-todomvc/src/Main.purs line 162, column 3 - line 163, column 3: " + [ _14.constructor.name ]);
          };
          return Thermite_Action.modifyState(updateState(action));
      };
  };
  var spec = Thermite.simpleSpec(initialState)(performAction)(render);
  var main = (function () {
      var component = Thermite.createClass(spec);
      return Thermite.render(component)({});
  })();
  exports["main"] = main;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
