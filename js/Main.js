// Generated by psc version 0.6.9.3
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var not = function (dict) {
        return dict.not;
    };
    var liftM1 = function (__dict_Monad_7) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_7["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_7)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (a) {
        return function (_37) {
            return a;
        };
    };
    var $$void = function (__dict_Functor_10) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_10)($$const(unit))(fa);
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _536 = compare(__dict_Ord_12)(a1)(a2);
                if (_536 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_16)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "<": $less, 
        compare: compare, 
        "==": $eq$eq, 
        "-": $minus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        cons: cons, 
        ":": $colon, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        boolLikeBoolean: boolLikeBoolean
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = new Profunctor(function (a2b) {
        return function (c2d) {
            return function (b2c) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
            };
        };
    });
    var dimap = function (dict) {
        return dict.dimap;
    };
    var rmap = function (__dict_Profunctor_18) {
        return function (b2c) {
            return dimap(__dict_Profunctor_18)(Prelude.id(Prelude.categoryArr))(b2c);
        };
    };
    return {
        Profunctor: Profunctor, 
        rmap: rmap, 
        dimap: dimap, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (b) {
        return function (f) {
            return function (_95) {
                if (_95 instanceof Nothing) {
                    return b;
                };
                if (_95 instanceof Just) {
                    return f(_95.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    return {
        Nothing: Nothing, 
        Just: Just, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var functorArray = new Prelude.Functor(map);
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    return {
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        deleteAt: deleteAt, 
        append: append, 
        length: length, 
        map: map, 
        singleton: singleton, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var snd = function (_183) {
        return _183.value1;
    };
    var fst = function (_182) {
        return _182.value0;
    };
    return {
        Tuple: Tuple, 
        zip: zip, 
        snd: snd, 
        fst: fst
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Lazy = PS.Control_Lazy;
    var StateT = function (x) {
        return x;
    };
    var runStateT = function (_231) {
        return _231;
    };
    var monadStateT = function (__dict_Monad_196) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_196);
        }, function () {
            return bindStateT(__dict_Monad_196);
        });
    };
    var functorStateT = function (__dict_Monad_200) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_200)));
    };
    var bindStateT = function (__dict_Monad_203) {
        return new Prelude.Bind(function (_232) {
            return function (f) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_203["__superclass_Prelude.Bind_1"]())(_232(s))(function (_15) {
                        return runStateT(f(_15.value0))(_15.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_203);
        });
    };
    var applyStateT = function (__dict_Monad_204) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_204)), function () {
            return functorStateT(__dict_Monad_204);
        });
    };
    var applicativeStateT = function (__dict_Monad_205) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_205);
        }, function (a) {
            return StateT(function (s) {
                return Prelude["return"](__dict_Monad_205)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    return {
        StateT: StateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var runIdentity = function (_390) {
        return _390;
    };
    var functorIdentity = new Prelude.Functor(function (f) {
        return function (_396) {
            return f(_396);
        };
    });
    var applyIdentity = new Prelude.Apply(function (_397) {
        return function (_398) {
            return _397(_398);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadState = function (state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var monadStateStateT = function (__dict_Monad_459) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_459))(f));
        });
    };
    var modify = function (__dict_Monad_468) {
        return function (__dict_MonadState_469) {
            return function (f) {
                return state(__dict_MonadState_469)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        state: state, 
        monadStateStateT: monadStateStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    return {
        execState: execState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Optic_Monad = (function () {
    "use strict";
    var Control_Monad_State = PS.Control_Monad_State;
    var Prelude = PS.Prelude;
    var $hash$tilde = function (s) {
        return function (sa) {
            return Control_Monad_State.execState(sa)(s);
        };
    };
    return {
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Optic_Index_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Map = PS.Data_Map;
    var Data_Set = PS.Data_Set;
    var Data_StrMap = PS.Data_StrMap;
    var IndexKey = {};
    var IndexValue = {};
    var indexValueArray = IndexValue;
    var indexKeyArray = IndexKey;
    return {
        IndexValue: IndexValue, 
        IndexKey: IndexKey, 
        indexKeyArray: indexKeyArray, 
        indexValueArray: indexValueArray
    };
})();
var PS = PS || {};
PS.Optic_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Identity = PS.Data_Identity;
    var Optic_Index_Class = PS.Optic_Index_Class;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var Index = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
        this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
        this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
        this.ix = ix;
    };
    var ix = function (dict) {
        return dict.ix;
    };
    var indexArray = new Index(function () {
        return Optic_Index_Class.indexKeyArray;
    }, function () {
        return Optic_Index_Class.indexValueArray;
    }, function (n) {
        return function (__dict_Applicative_633) {
            return function (a2fa) {
                return function (as) {
                    if (n < 0) {
                        return Prelude.pure(__dict_Applicative_633)(as);
                    };
                    if (as.length === 0) {
                        return Prelude.pure(__dict_Applicative_633)([  ]);
                    };
                    if (n === 0 && as.length >= 1) {
                        var _564 = as.slice(1);
                        return Prelude["<#>"]((__dict_Applicative_633["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(a2fa(as[0]))(function (a$prime) {
                            return Prelude[":"](a$prime)(_564);
                        });
                    };
                    if (as.length >= 1) {
                        var _566 = as.slice(1);
                        return Prelude["<$>"]((__dict_Applicative_633["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](as[0]))(ix(indexArray)(n - 1)(__dict_Applicative_633)(a2fa)(_566));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    return {
        Index: Index, 
        ix: ix, 
        indexArray: indexArray
    };
})();
var PS = PS || {};
PS.Optic_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Contravariant = PS.Data_Contravariant;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var set = function (stab) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](b))));
        };
    };
    var $dot$tilde = set;
    var over = function (__dict_Profunctor_677) {
        return function (pstab) {
            return function (pab) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(pstab(Data_Profunctor.rmap(__dict_Profunctor_677)(Data_Identity.Identity)(pab)));
            };
        };
    };
    var $plus$plus$tilde = function (__dict_Semigroup_681) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["++"](__dict_Semigroup_681))(a));
            };
        };
    };
    return {
        set: set, 
        over: over, 
        "++~": $plus$plus$tilde, 
        ".~": $dot$tilde
    };
})();
var PS = PS || {};
PS.Optic_Core = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Getter = PS.Optic_Getter;
    var Optic_Lens = PS.Optic_Lens;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Types = PS.Optic_Types;
    var $dot$tilde = Optic_Setter[".~"];
    var $dot$dot = Prelude["<<<"];
    return {
        ".~": $dot$tilde, 
        "..": $dot$dot
    };
})();
var PS = PS || {};
PS.Optic_Monad_Setter = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Optic_Setter = PS.Optic_Setter;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Profunctor = PS.Data_Profunctor;
    var Optic_Types = PS.Optic_Types;
    var $dot$eq = function (__dict_Monad_704) {
        return function (__dict_MonadState_705) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_704)(__dict_MonadState_705)(Optic_Setter[".~"](ssab)(b));
                };
            };
        };
    };
    var $plus$plus$eq = function (__dict_Monad_712) {
        return function (__dict_MonadState_713) {
            return function (__dict_Semigroup_714) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_712)(__dict_MonadState_713)(Optic_Setter["++~"](__dict_Semigroup_714)(ssab)(b));
                    };
                };
            };
        };
    };
    return {
        "++=": $plus$plus$eq, 
        ".=": $dot$eq
    };
})();
var PS = PS || {};
PS.Optic_Extended = (function () {
    "use strict";
    var Optic_Equality = PS.Optic_Equality;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Iso = PS.Optic_Iso;
    var Optic_Monad = PS.Optic_Monad;
    var Optic_Monad_Getter = PS.Optic_Monad_Getter;
    var Optic_Monad_Setter = PS.Optic_Monad_Setter;
    var Optic_Review = PS.Optic_Review;
    var Optic_Traversal = PS.Optic_Traversal;
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var $dot$eq = Optic_Monad_Setter[".="];
    var $plus$plus$eq = Optic_Monad_Setter["++="];
    var $hash$tilde = Optic_Monad["#~"];
    return {
        "++=": $plus$plus$eq, 
        ".=": $dot$eq, 
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Thermite_Types = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    
  var emptyAttr = {};
  ;
    
  function appendAttr(attr1) {
    return function(attr2) {
      var o = {};
      for (var k in attr1) {
        if (attr1.hasOwnProperty(k)) {
          o[k] = attr1[k];
        }
      }
      for (var k in attr2) {
        if (attr2.hasOwnProperty(k)) {
          o[k] = attr2[k];
        }
      }
      return o;
    };
  }
  ;
    var Spec = function (x) {
        return x;
    };
    var semigroupAttr = new Prelude.Semigroup(appendAttr);
    var monoidAttr = new Data_Monoid.Monoid(function () {
        return semigroupAttr;
    }, emptyAttr);
    return {
        Spec: Spec, 
        semigroupAttr: semigroupAttr, 
        monoidAttr: monoidAttr
    };
})();
var PS = PS || {};
PS.Thermite_Internal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    
  function getStateImpl(ctx) {
    return function() {
      return ctx.state;
    };
  }
  ;
    
  function setStateImpl(ctx) {
    return function(state) {
      return function() {
        ctx.setState(state);
      };
    };
  }
  ;
    
  function textImpl(s) {
    return s;
  }
  ;
    
  function createElementImpl(name) {
    return function(attr) {
      return function(children) {
        return React.createElement(name, attr, children);
      };
    };
  }
  ;
    
  function unsafeAttribute(k) {
    return function(value) {
      var o = {};
      o[k] = value;
      return o;
    };
  }
  ;
    
  function event(name) {
    return function(context) {
      return function(f) {
        var o = {}; 
        o[name] = function(e) {
          context.performAction(f(e));
        };
        return o;
      };
    };
  }
  ;
    
  function createClassImpl(runAction) {
    return function(maybe) {
      return function(spec) {
        return React.createClass({
          getInitialState: function() {
            return spec.initialState;
          },
          performAction: function(action) {
            runAction(this)(spec.performAction(this.props)(action))();
          },
          render: function() {
            return spec.render(this)(this.state)(this.props);
          },
          componentWillMount: function() {
            var self = this;
            maybe(function() { })(function(action) {
              return function() {
                self.performAction(action);
              };
            })(spec.componentWillMount)();
          },
          displayName: maybe(undefined)(function(a) { return a; })(spec.displayName)
        })
      };
    };
  }
  ;
    
  function documentBody(component) {
    return document.body;
  }
  ;
    
  function renderToImpl(element) {
    return function (component) {
      return function(props) {
        return function() {
          React.render(React.createElement(component, props), element);
        };
      };
    }
  }
  ;
    return {
        renderToImpl: renderToImpl, 
        documentBody: documentBody, 
        createClassImpl: createClassImpl, 
        event: event, 
        unsafeAttribute: unsafeAttribute, 
        createElementImpl: createElementImpl, 
        textImpl: textImpl, 
        setStateImpl: setStateImpl, 
        getStateImpl: getStateImpl
    };
})();
var PS = PS || {};
PS.Thermite_Action = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Internal = PS.Thermite_Internal;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Types = PS.Thermite_Types;
    var GetState = (function () {
        function GetState(value0) {
            this.value0 = value0;
        };
        GetState.create = function (value0) {
            return new GetState(value0);
        };
        return GetState;
    })();
    var SetState = (function () {
        function SetState(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        SetState.create = function (value0) {
            return function (value1) {
                return new SetState(value0, value1);
            };
        };
        return SetState;
    })();
    var Wait = (function () {
        function Wait(value0) {
            this.value0 = value0;
        };
        Wait.create = function (value0) {
            return new Wait(value0);
        };
        return Wait;
    })();
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Impure = (function () {
        function Impure(value0) {
            this.value0 = value0;
        };
        Impure.create = function (value0) {
            return new Impure(value0);
        };
        return Impure;
    })();
    var setState = function (s) {
        return Impure.create(new SetState(s, new Pure(Prelude.unit)));
    };
    var runAction = function (ctx) {
        var go = function (_514) {
            if (_514 instanceof Pure) {
                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
            };
            if (_514 instanceof Impure && _514.value0 instanceof GetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var _33 = Thermite_Internal.getStateImpl(ctx)();
                    return go(_514.value0.value0(_33))();
                });
            };
            if (_514 instanceof Impure && _514.value0 instanceof SetState) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    Thermite_Internal.setStateImpl(ctx)(_514.value0.value0)();
                    return go(_514.value0.value1)();
                });
            };
            if (_514 instanceof Impure && _514.value0 instanceof Wait) {
                return _514.value0.value0(go);
            };
            throw new Error("Failed pattern match");
        };
        return go;
    };
    var getState = Impure.create(new GetState(Pure.create));
    var functorActionF = new Prelude.Functor(function (f) {
        return function (_513) {
            if (_513 instanceof GetState) {
                return new GetState(Prelude["<<<"](Prelude.semigroupoidArr)(f)(_513.value0));
            };
            if (_513 instanceof SetState) {
                return new SetState(_513.value0, f(_513.value1));
            };
            if (_513 instanceof Wait) {
                return new Wait(function (k_1) {
                    return _513.value0(Prelude["<<<"](Prelude.semigroupoidArr)(k_1)(f));
                });
            };
            throw new Error("Failed pattern match");
        };
    });
    var functorAction = new Prelude.Functor(function (f) {
        return function (_515) {
            if (_515 instanceof Pure) {
                return new Pure(f(_515.value0));
            };
            if (_515 instanceof Impure) {
                return new Impure(Prelude["<$>"](functorActionF)(Prelude["<$>"](functorAction)(f))(_515.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var monadAction = new Prelude.Monad(function () {
        return applicativeAction;
    }, function () {
        return bindAction;
    });
    var bindAction = new Prelude.Bind(function (_516) {
        return function (f) {
            if (_516 instanceof Pure) {
                return f(_516.value0);
            };
            if (_516 instanceof Impure) {
                return Impure.create(Prelude["<#>"](functorActionF)(_516.value0)(function (a_1) {
                    return Prelude[">>="](bindAction)(a_1)(f);
                }));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyAction;
    });
    var applyAction = new Prelude.Apply(Prelude.ap(monadAction), function () {
        return functorAction;
    });
    var applicativeAction = new Prelude.Applicative(function () {
        return applyAction;
    }, Pure.create);
    var modifyState = function (f) {
        return Prelude[">>="](bindAction)(getState)(function (_34) {
            return setState(f(_34));
        });
    };
    return {
        modifyState: modifyState, 
        setState: setState, 
        getState: getState, 
        runAction: runAction, 
        functorAction: functorAction, 
        applyAction: applyAction, 
        applicativeAction: applicativeAction, 
        bindAction: bindAction, 
        monadAction: monadAction
    };
})();
var PS = PS || {};
PS.Thermite_Events = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var onKeyUp = Thermite_Internal.event("onKeyUp");
    var onClick = Thermite_Internal.event("onClick");
    var onChange = Thermite_Internal.event("onChange");
    return {
        onClick: onClick, 
        onChange: onChange, 
        onKeyUp: onKeyUp
    };
})();
var PS = PS || {};
PS.Thermite_Html = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var text = Thermite_Internal.textImpl;
    return {
        text: text
    };
})();
var PS = PS || {};
PS.Thermite = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Thermite_Action = PS.Thermite_Action;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var DOM = PS.DOM;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Types = PS.Thermite_Types;
    var simpleSpec = function (initialState) {
        return function (performAction) {
            return function (render_1) {
                return {
                    initialState: initialState, 
                    performAction: performAction, 
                    render: render_1, 
                    componentWillMount: Data_Maybe.Nothing.value, 
                    displayName: Data_Maybe.Nothing.value
                };
            };
        };
    };
    var renderTo = Thermite_Internal.renderToImpl;
    var render = function (cc) {
        return function (props) {
            return function __do() {
                var _36 = Thermite_Internal.documentBody();
                return renderTo(_36)(cc)(props)();
            };
        };
    };
    var createClass = Thermite_Internal.createClassImpl(Thermite_Action.runAction)(Data_Maybe.maybe);
    return {
        renderTo: renderTo, 
        render: render, 
        createClass: createClass, 
        simpleSpec: simpleSpec
    };
})();
var PS = PS || {};
PS.Thermite_Html_Attributes = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var value = Thermite_Internal.unsafeAttribute("value");
    var title = Thermite_Internal.unsafeAttribute("title");
    var placeholder = Thermite_Internal.unsafeAttribute("placeholder");
    var className = Thermite_Internal.unsafeAttribute("className");
    var checked = Thermite_Internal.unsafeAttribute("checked");
    var _type = Thermite_Internal.unsafeAttribute("type");
    return {
        value: value, 
        _type: _type, 
        title: title, 
        placeholder: placeholder, 
        className: className, 
        checked: checked
    };
})();
var PS = PS || {};
PS.Thermite_Html_Elements = (function () {
    "use strict";
    var Thermite_Internal = PS.Thermite_Internal;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Thermite_Types = PS.Thermite_Types;
    var tr = Thermite_Internal.createElementImpl("tr");
    var tr$prime = tr(Data_Monoid.mempty(Thermite_Types.monoidAttr));
    var thead = Thermite_Internal.createElementImpl("thead");
    var thead$prime = thead(Data_Monoid.mempty(Thermite_Types.monoidAttr));
    var th = Thermite_Internal.createElementImpl("th");
    var td = Thermite_Internal.createElementImpl("td");
    var td$prime = td(Data_Monoid.mempty(Thermite_Types.monoidAttr));
    var tbody = Thermite_Internal.createElementImpl("tbody");
    var tbody$prime = tbody(Data_Monoid.mempty(Thermite_Types.monoidAttr));
    var table = Thermite_Internal.createElementImpl("table");
    var input = Thermite_Internal.createElementImpl("input");
    var h1 = Thermite_Internal.createElementImpl("h1");
    var h1$prime = h1(Data_Monoid.mempty(Thermite_Types.monoidAttr));
    var div = Thermite_Internal.createElementImpl("div");
    var button = Thermite_Internal.createElementImpl("button");
    return {
        "tr'": tr$prime, 
        tr: tr, 
        "thead'": thead$prime, 
        thead: thead, 
        th: th, 
        "td'": td$prime, 
        td: td, 
        "tbody'": tbody$prime, 
        tbody: tbody, 
        table: table, 
        input: input, 
        "h1'": h1$prime, 
        h1: h1, 
        div: div, 
        button: button
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Thermite_Html_Elements = PS.Thermite_Html_Elements;
    var Thermite_Html = PS.Thermite_Html;
    var Thermite_Html_Attributes = PS.Thermite_Html_Attributes;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Thermite_Events = PS.Thermite_Events;
    var Optic_Extended = PS.Optic_Extended;
    var Optic_Core = PS.Optic_Core;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Index = PS.Optic_Index;
    var Thermite_Action = PS.Thermite_Action;
    var Thermite = PS.Thermite;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Thermite_Types = PS.Thermite_Types;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Profunctor = PS.Data_Profunctor;
    function getValue(e) {  return e.target.value;};
    function getChecked(e) {  return e.target.checked;};
    function getKeyCode(e) {  return e.keyCode;};
    var Item = (function () {
        function Item(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Item.create = function (value0) {
            return function (value1) {
                return new Item(value0, value1);
            };
        };
        return Item;
    })();
    var All = (function () {
        function All() {

        };
        All.value = new All();
        return All;
    })();
    var Active = (function () {
        function Active() {

        };
        Active.value = new Active();
        return Active;
    })();
    var Completed = (function () {
        function Completed() {

        };
        Completed.value = new Completed();
        return Completed;
    })();
    var State = (function () {
        function State(value0) {
            this.value0 = value0;
        };
        State.create = function (value0) {
            return new State(value0);
        };
        return State;
    })();
    var NewItem = (function () {
        function NewItem(value0) {
            this.value0 = value0;
        };
        NewItem.create = function (value0) {
            return new NewItem(value0);
        };
        return NewItem;
    })();
    var RemoveItem = (function () {
        function RemoveItem(value0) {
            this.value0 = value0;
        };
        RemoveItem.create = function (value0) {
            return new RemoveItem(value0);
        };
        return RemoveItem;
    })();
    var SetEditText = (function () {
        function SetEditText(value0) {
            this.value0 = value0;
        };
        SetEditText.create = function (value0) {
            return new SetEditText(value0);
        };
        return SetEditText;
    })();
    var SetCompleted = (function () {
        function SetCompleted(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        SetCompleted.create = function (value0) {
            return function (value1) {
                return new SetCompleted(value0, value1);
            };
        };
        return SetCompleted;
    })();
    var SetFilter = (function () {
        function SetFilter(value0) {
            this.value0 = value0;
        };
        SetFilter.create = function (value0) {
            return new SetFilter(value0);
        };
        return SetFilter;
    })();
    var DoNothing = (function () {
        function DoNothing() {

        };
        DoNothing.value = new DoNothing();
        return DoNothing;
    })();
    var showFilter = function (_521) {
        if (_521 instanceof All) {
            return "All";
        };
        if (_521 instanceof Active) {
            return "Active";
        };
        if (_521 instanceof Completed) {
            return "Completed";
        };
        throw new Error("Failed pattern match");
    };
    var items = function (__dict_Functor_726) {
        return function (f) {
            return function (st) {
                return Prelude["<#>"](__dict_Functor_726)(f(st.items))(function (i) {
                    var _594 = {};
                    for (var _595 in st) {
                        if (st.hasOwnProperty(_595)) {
                            _594[_595] = st[_595];
                        };
                    };
                    _594.items = i;
                    return _594;
                });
            };
        };
    };
    var itemBoolean = function (__dict_Functor_727) {
        return function (f) {
            return function (_523) {
                return Prelude["<$>"](__dict_Functor_727)(Item.create(_523.value0))(f(_523.value1));
            };
        };
    };
    var initialState = new State({
        items: [  ], 
        editText: "", 
        filter: All.value
    });
    var handleKeyPress = function (e) {
        var _600 = getKeyCode(e);
        if (_600 === 13) {
            return NewItem.create(getValue(e));
        };
        if (_600 === 27) {
            return new SetEditText("");
        };
        return DoNothing.value;
    };
    var handleCheckEvent = function (index) {
        return function (e) {
            return new SetCompleted(index, getChecked(e));
        };
    };
    var handleChangeEvent = function (e) {
        return new SetEditText(getValue(e));
    };
    var filter_ = function (__dict_Functor_728) {
        return function (f) {
            return function (st) {
                return Prelude["<#>"](__dict_Functor_728)(f(st.filter))(function (i) {
                    var _601 = {};
                    for (var _602 in st) {
                        if (st.hasOwnProperty(_602)) {
                            _601[_602] = st[_602];
                        };
                    };
                    _601.filter = i;
                    return _601;
                });
            };
        };
    };
    var eqFilter = new Prelude.Eq(function (x) {
        return function (y) {
            return !Prelude["=="](eqFilter)(x)(y);
        };
    }, function (_529) {
        return function (_530) {
            if (_529 instanceof All && _530 instanceof All) {
                return true;
            };
            if (_529 instanceof Active && _530 instanceof Active) {
                return true;
            };
            if (_529 instanceof Completed && _530 instanceof Completed) {
                return true;
            };
            return false;
        };
    });
    var editText = function (__dict_Functor_729) {
        return function (f) {
            return function (st) {
                return Prelude["<#>"](__dict_Functor_729)(f(st.editText))(function (i) {
                    var _605 = {};
                    for (var _606 in st) {
                        if (st.hasOwnProperty(_606)) {
                            _605[_606] = st[_606];
                        };
                    };
                    _605.editText = i;
                    return _605;
                });
            };
        };
    };
    var applyFilter = function (_524) {
        return function (_525) {
            if (_524 instanceof All) {
                return true;
            };
            if (_524 instanceof Active) {
                return !_525.value1;
            };
            if (_524 instanceof Completed) {
                return _525.value1;
            };
            throw new Error("Failed pattern match");
        };
    };
    var render = function (ctx) {
        return function (_526) {
            return function (_527) {
                var title = Thermite_Html_Elements["h1'"]([ Thermite_Html.text("todos") ]);
                var newItem = Thermite_Html_Elements["tr'"]([ Thermite_Html_Elements["td'"]([  ]), Thermite_Html_Elements["td'"]([ Thermite_Html_Elements.input(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("form-control"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.placeholder("Create a new task"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.value(_526.value0.editText))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Events.onKeyUp(ctx)(handleKeyPress))(Thermite_Events.onChange(ctx)(handleChangeEvent))))))([  ]) ]), Thermite_Html_Elements["td'"]([  ]) ]);
                var item = function (_531) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Thermite_Html_Elements["tr'"])(Data_Array.map(Prelude["<<<"](Prelude.semigroupoidArr)(Thermite_Html_Elements["td'"])(Prelude.pure(Data_Array.applicativeArray))))([ Thermite_Html_Elements.input(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes._type("checkbox"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("checkbox"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.checked((function () {
                        if (_531.value0.value1) {
                            return "checked";
                        };
                        if (!_531.value0.value1) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })()))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.title("Mark as completed"))(Thermite_Events.onChange(ctx)(handleCheckEvent(_531.value1)))))))([  ]), Thermite_Html.text(_531.value0.value0), Thermite_Html_Elements.button(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className("btn btn-danger pull-right"))(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.title("Remove item"))(Thermite_Events.onClick(ctx)(function (_519) {
                        return new RemoveItem(_531.value1);
                    }))))([ Thermite_Html.text("\u2716") ]) ]);
                };
                var items_1 = Thermite_Html_Elements.table(Thermite_Html_Attributes.className("table table-striped"))([ Thermite_Html_Elements["thead'"]([ Thermite_Html_Elements.th(Thermite_Html_Attributes.className("col-md-1"))([  ]), Thermite_Html_Elements.th(Thermite_Html_Attributes.className("col-md-10"))([ Thermite_Html.text("Description") ]), Thermite_Html_Elements.th(Thermite_Html_Attributes.className("col-md-1"))([  ]) ]), Thermite_Html_Elements["tbody'"](Prelude[":"](newItem)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.map(item))(Data_Array.filter(Prelude["<<<"](Prelude.semigroupoidArr)(applyFilter(_526.value0.filter))(Data_Tuple.fst)))(Data_Tuple.zip(_526.value0.items)(Data_Array.range(0)(Data_Array.length(_526.value0.items)))))) ]);
                var filter__1 = function (f) {
                    return Thermite_Html_Elements.button(Prelude["<>"](Thermite_Types.semigroupAttr)(Thermite_Html_Attributes.className((function () {
                        var _623 = Prelude["=="](eqFilter)(f)(_526.value0.filter);
                        if (_623) {
                            return "btn active";
                        };
                        if (!_623) {
                            return "btn";
                        };
                        throw new Error("Failed pattern match");
                    })()))(Thermite_Events.onClick(ctx)(function (_520) {
                        return new SetFilter(f);
                    })))([ Thermite_Html.text(showFilter(f)) ]);
                };
                var filters = Thermite_Html_Elements.div(Thermite_Html_Attributes.className("btn-group"))(Prelude["<$>"](Data_Array.functorArray)(filter__1)([ All.value, Active.value, Completed.value ]));
                return Thermite_Html_Elements.div(Thermite_Html_Attributes.className("container"))([ title, filters, items_1 ]);
            };
        };
    };
    var _State = function (__dict_Functor_730) {
        return function (f) {
            return function (_522) {
                return Prelude["<$>"](__dict_Functor_730)(State.create)(f(_522.value0));
            };
        };
    };
    var performAction = function (_528) {
        return function (action) {
            var updateState = function (_532) {
                if (_532 instanceof NewItem) {
                    return function (st) {
                        return Optic_Extended["#~"](st)(Prelude[">>="](Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Optic_Extended["++="](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(Data_Array.semigroupArray)(Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(items(Data_Identity.functorIdentity)))([ new Item(_532.value0, false) ]))(function () {
                            return Optic_Extended[".="](Control_Monad_State_Trans.monadStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.monadStateStateT(Data_Identity.monadIdentity))(Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(editText(Data_Identity.functorIdentity)))("");
                        }));
                    };
                };
                if (_532 instanceof RemoveItem) {
                    return Optic_Setter.over(Data_Profunctor.profunctorArr)(Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(items(Data_Identity.functorIdentity)))(Data_Array.deleteAt(_532.value0)(1));
                };
                if (_532 instanceof SetEditText) {
                    return Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(editText(Data_Identity.functorIdentity)))(_532.value0);
                };
                if (_532 instanceof SetCompleted) {
                    return Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(Optic_Core[".."](Prelude.semigroupoidArr)(items(Data_Identity.functorIdentity))(Optic_Core[".."](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexArray)(_532.value0)(Data_Identity.applicativeIdentity))(itemBoolean(Data_Identity.functorIdentity)))))(_532.value1);
                };
                if (_532 instanceof SetFilter) {
                    return Optic_Core[".~"](Optic_Core[".."](Prelude.semigroupoidArr)(_State(Data_Identity.functorIdentity))(filter_(Data_Identity.functorIdentity)))(_532.value0);
                };
                if (_532 instanceof DoNothing) {
                    return Prelude.id(Prelude.categoryArr);
                };
                throw new Error("Failed pattern match");
            };
            return Thermite_Action.modifyState(updateState(action));
        };
    };
    var spec = Thermite.simpleSpec(initialState)(performAction)(render);
    var main = (function () {
        var component = Thermite.createClass(spec);
        return Thermite.render(component)({});
    })();
    return {
        main: main
    };
})();
PS.Main.main();
